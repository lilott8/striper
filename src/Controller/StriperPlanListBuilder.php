<?php
/**
 * Created by PhpStorm.
 * User: jason
 * Date: 3/9/17
 * Time: 1:30 PM
 */

namespace Drupal\striper\Controller;

use Drupal\striper;
use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityStorageInterface;
use Drupal\Core\Entity\EntityTypeInterface;

class StriperPlanListBuilder extends ConfigEntityListBuilder {

    public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage) {
        parent::__construct($entity_type, $storage);

        $this->config = \Drupal::config('striper.config');

        if($this->config->get('use_key') == 'live') {
            $message = 'You are using your live keys.';
            //$key = striper\StriperConfigKeyForm::getKey(striper\StriperConfigKeyForm::STRIPE_LIVE_SK);
        } else {
            $message = '';
            //$key = striper\StriperConfigKeyForm::getKey(striper\StriperConfigKeyForm::STRIPE_TEST_SK);
        }

        if(!empty($message)) {
            drupal_set_message($message, 'warning');
        }
    }

    /**
     * Builds the header row for the entity listing.
     *
     * @return array
     *   A render array structure of header strings.
     *
     * @see Drupal\Core\Entity\EntityListController::render()
     */
    public function  buildHeader() {
        $header['plan_name'] = $this->t('Plan Name');
        $header['machine_name'] = $this->t('Machine Name');
        $header['price'] = $this->t('Cost');
        $header['frequency'] = $this->t('Frequency');
        $header['active_plan'] = $this->t('Active');
        $header['plan_in_striper'] = $this->t('From Stripe');
        return $header + parent::buildHeader();
    }

    /**
     * Builds a row for an entity in the entity listing.
     *
     * @param EntityInterface $entity
     *   The entity for which to build the row.
     *
     * @return array
     *   A render array of the table row for displaying the entity.
     *
     * @see Drupal\Core\Entity\EntityListController::render()
     */
    public function buildRow(EntityInterface $entity) {
        $row['plan_name'] = $entity->plan_name;
        $row['machine_name'] = $entity->id();
        $row['price'] = $entity->plan_price;
        $row['frequency'] = $entity->plan_frequency;
        $row['active_plan'] = $entity->plan_active;
        $row['plan_in_stripe'] = $entity->plan_in_stripe;

        return $row + parent::buildRow($entity); // TODO: Change the autogenerated stub
    }

}